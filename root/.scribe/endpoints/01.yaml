name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'mods/{mod_id}/images'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 11
        type: integer
        custom: []
    cleanBodyParameters:
      limit: 11
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":89521,"user_id":126637,"mod_id":38808,"has_thumb":true,"file":"126637_1659161590_1da3420243d6b6ee9cd720f680cc5e2e.webp","type":"image\/webp","size":84878,"created_at":"2022-07-30T06:13:10.000000Z","updated_at":"2022-07-30T06:13:10.000000Z"}],"links":{"first":"http:\/\/localhost:8000\/mods\/38808\/images?page=1","last":"http:\/\/localhost:8000\/mods\/38808\/images?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/mods\/38808\/images?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/mods\/38808\/images","per_page":11,"to":1,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '90'
          x-ratelimit-remaining: '87'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'mods/{mod_id}/images'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'Must be a file.'
        required: true
        example: null
        type: file
        custom: []
    cleanBodyParameters: []
    fileParameters:
      file: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'mods/{mod_id}/links'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Must not be greater than 150 characters.'
        required: false
        example: qptxdfxmxkmoyubwcxntdo
        type: string
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 3
        type: integer
        custom: []
    cleanBodyParameters:
      query: qptxdfxmxkmoyubwcxntdo
      limit: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost:8000\/mods\/38808\/links?page=1","last":"http:\/\/localhost:8000\/mods\/38808\/links?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/mods\/38808\/links?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/mods\/38808\/links","per_page":3,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '90'
          x-ratelimit-remaining: '83'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'mods/{mod_id}/links'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'mods/{mod_id}/images'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Deletes all images of a mod'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'mods/{mod_id}/members/accept'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Accepts incoming member request and make it active or delete it if rejected.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      accept:
        name: accept
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      accept: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'mods/{mod_id}/members'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'Must be at least 1.'
        required: true
        example: 51
        type: integer
        custom: []
      level:
        name: level
        description: 'Must be one of <code>maintainer</code>, <code>collaborator</code>, <code>viewer</code>, or <code>contributor</code>.'
        required: true
        example: viewer
        type: string
        custom: []
    cleanBodyParameters:
      user_id: 51
      level: viewer
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'mods/{mod_id}/members/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the member.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      level:
        name: level
        description: 'Must be one of <code>collaborator</code>, <code>maintainer</code>, <code>viewer</code>, or <code>contributor</code>.'
        required: true
        example: collaborator
        type: string
        custom: []
    cleanBodyParameters:
      level: collaborator
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'mods/{mod_id}/members/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the member.'
        required: true
        example: 2
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'mods/{mod_id}/dependencies'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'mods/{mod_id}/dependencies/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the dependency.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'mods/{mod_id}/dependencies/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the dependency.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'mods/{mod_id}/version'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '1.0'
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          x-ratelimit-limit: '90'
          x-ratelimit-remaining: '79'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'mods/{mod_id}/comments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 14
        type: integer
        custom: []
    cleanBodyParameters:
      limit: 14
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost:8000\/mods\/38808\/comments?page=1","last":"http:\/\/localhost:8000\/mods\/38808\/comments?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":null,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8000\/mods\/38808\/comments?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost:8000\/mods\/38808\/comments","per_page":50,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '90'
          x-ratelimit-remaining: '78'
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'mods/{mod_id}/comments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'mods/{mod_id}/comments/subscription'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'mods/{mod_id}/comments/subscription'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      mod_id:
        name: mod_id
        description: 'The ID of the mod.'
        required: true
        example: 38808
        type: integer
        custom: []
    cleanUrlParameters:
      mod_id: 38808
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
