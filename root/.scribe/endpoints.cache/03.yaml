## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: |-

  API routes for interacting with users
endpoints:
  -
    httpMethods:
      - GET
    uri: 'games/{game_id}/users'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: 'Get List of Users'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      game_id:
        name: game_id
        description: 'The ID of the game.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      game_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Must not be greater than 150 characters.'
        required: false
        example: vizeayjngcsmgfztf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      query: vizeayjngcsmgfztf
      limit: 3
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'users/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: 'Edit User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 30 characters.'
        required: false
        example: ekcqgvlmzwnhwrhypvwdjbcj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      unique_name:
        name: unique_name
        description: 'Must contain only letters, numbers, dashes and underscores. Must be at least 3 characters. Must not be greater than 50 characters.'
        required: false
        example: djgebjb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      avatar_file:
        name: avatar_file
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      custom_color:
        name: custom_color
        description: 'Must not be greater than 7 characters.'
        required: false
        example: bl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      bio:
        name: bio
        description: 'Must not be greater than 3000 characters.'
        required: false
        example: alurzj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: corwin.madisyn@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      custom_title:
        name: custom_title
        description: 'Must not be greater than 100 characters.'
        required: false
        example: uhkcswnexvxuebx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      private_profile:
        name: private_profile
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      invisible:
        name: invisible
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      banner_file:
        name: banner_file
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      background_file:
        name: background_file
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      donation_url:
        name: donation_url
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'http://predovic.org/soluta-neque-et-quas-culpa-nobis-veniam-ea'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      show_tag:
        name: show_tag
        description: ''
        required: false
        example: supporter_or_role
        type: string
        enumValues:
          - role
          - supporter_or_role
          - none
        exampleWasSpecified: false
        custom: []
      current_password:
        name: current_password
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'Must not be greater than 128 characters.'
        required: false
        example: '3l^NkBmjCb&BV'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra:
        name: extra
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra.default_mods_sort:
        name: extra.default_mods_sort
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra.default_mods_view:
        name: extra.default_mods_view
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra.home_show_last_games:
        name: extra.home_show_last_games
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra.home_show_mods:
        name: extra.home_show_mods
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra.home_show_threads:
        name: extra.home_show_threads
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra.game_show_mods:
        name: extra.game_show_mods
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra.game_show_threads:
        name: extra.game_show_threads
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra.auto_subscribe_to_mod:
        name: extra.auto_subscribe_to_mod
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra.auto_subscribe_to_thread:
        name: extra.auto_subscribe_to_thread
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      extra.background_opacity:
        name: extra.background_opacity
        description: 'Must be at least 0. Must not be greater than 1.'
        required: false
        example: 1
        type: number
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: ekcqgvlmzwnhwrhypvwdjbcj
      unique_name: djgebjb
      custom_color: bl
      bio: alurzj
      email: corwin.madisyn@example.org
      custom_title: uhkcswnexvxuebx
      private_profile: false
      invisible: false
      donation_url: 'http://predovic.org/soluta-neque-et-quas-culpa-nobis-veniam-ea'
      show_tag: supporter_or_role
      password: '3l^NkBmjCb&BV'
      extra:
        home_show_last_games: true
        home_show_mods: false
        home_show_threads: false
        game_show_mods: false
        game_show_threads: false
        auto_subscribe_to_mod: false
        auto_subscribe_to_thread: true
        background_opacity: 1
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'users/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete User'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      unique_name:
        name: unique_name
        description: 'Must contain only letters, numbers, dashes and underscores. Must be at least 3 characters. Must not be greater than 50 characters.'
        required: true
        example: grnlmbukpexajolzmkyqcadl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      are_you_sure:
        name: are_you_sure
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      unique_name: grnlmbukpexajolzmkyqcadl
      are_you_sure: true
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'users/{user}'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: 'Get User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: 'The ID of the user'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'users/{user_id}/comments'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Must not be greater than 150 characters.'
        required: false
        example: iinxacdiidiumknfsnjhl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      query: iinxacdiidiumknfsnjhl
      limit: 5
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'users/{user_id}/threads'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Must not be greater than 150 characters.'
        required: false
        example: ocvcditotdprglyyes
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_name:
        name: category_name
        description: 'Must not be greater than 100 characters.'
        required: false
        example: qigruecpbr
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: 'Must be at least 1.'
        required: false
        example: 41
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: 'Must be at least 1.'
        required: false
        example:
          - 55
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      no_pins:
        name: no_pins
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      forum_id:
        name: forum_id
        description: 'Must be at least 1.'
        required: false
        example: 70
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      query: ocvcditotdprglyyes
      limit: 24
      category_name: qigruecpbr
      category_id: 41
      tags:
        - 55
      no_pins: false
      forum_id: 70
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'users/{user_id}/roles'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: 'Set User Roles'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role_ids:
        name: role_ids
        description: 'Must be at least 2.'
        required: false
        example:
          - 86
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      role_ids:
        - 86
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'users/{user_id}/mods'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete User Mods'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'users/{user_id}/discussions'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete User Discussions'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'users/{user_id}/purge'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'users/{user_id}/reports'
    metadata:
      groupName: Users
      groupDescription: |-

        API routes for interacting with users
      subgroup: ''
      subgroupDescription: ''
      title: 'Report User'
      description: 'Reports the user for moderators to look at it.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
