name: Games
description: |-

  API routes for interacting with game sections.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'games/{id}'
    metadata:
      groupName: Games
      groupDescription: |-

        API routes for interacting with game sections.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a game'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the game.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'games/{id}'
    metadata:
      groupName: Games
      groupDescription: |-

        API routes for interacting with game sections.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a game'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the game.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 150 characters.'
        required: false
        example: pivibzgruocnlxnpw
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      buttons:
        name: buttons
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: ldlkmvxlvcwvl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      thumbnail_file:
        name: thumbnail_file
        description: 'Must not be greater than 512000 characters.'
        required: false
        example: c
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      banner_file:
        name: banner_file
        description: 'Must not be greater than 512000 characters.'
        required: false
        example: yyvwplrhgjrfzpiqkdcg
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      short_name:
        name: short_name
        description: 'Must not be greater than 30 characters.'
        required: false
        example: ssuehhopjptodcdhbesjnawz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      webhook_url:
        name: webhook_url
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: 'http://www.bartoletti.com/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      mod_manager_ids:
        name: mod_manager_ids
        description: 'Must be at least 1.'
        required: false
        example:
          - 84
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      default_mod_manager_id:
        name: default_mod_manager_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: pivibzgruocnlxnpw
      buttons: ldlkmvxlvcwvl
      thumbnail_file: c
      banner_file: yyvwplrhgjrfzpiqkdcg
      short_name: ssuehhopjptodcdhbesjnawz
      webhook_url: 'http://www.bartoletti.com/'
      mod_manager_ids:
        - 84
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'games/{game_id}/game-section-data'
    metadata:
      groupName: Games
      groupDescription: |-

        API routes for interacting with game sections.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get game section data'
      description: "It's like /mods but returns the game too. It's used to avoid 2 requests in the game section so it's faster."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      game_id:
        name: game_id
        description: 'The ID of the game.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      game_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Must not be greater than 150 characters.'
        required: false
        example: tt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      game_id:
        name: game_id
        description: 'Must be at least 1.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: 'Must be at least 1.'
        required: false
        example: 41
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: 'Must be at least 1.'
        required: false
        example:
          - 49
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      liked:
        name: liked
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      categories:
        name: categories
        description: 'Must be at least 1.'
        required: false
        example:
          - 44
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      block_tags:
        name: block_tags
        description: 'Must be at least 1.'
        required: false
        example:
          - 4
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: 'Must be at least 1.'
        required: false
        example: 84
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      collab:
        name: collab
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      ignore_blocked_users:
        name: ignore_blocked_users
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: best_match
        type: string
        enumValues:
          - bumped_at
          - published_at
          - likes
          - downloads
          - views
          - score
          - weekly_score
          - daily_score
          - random
          - best_match
          - name
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      query: tt
      limit: 15
      game_id: 5
      category_id: 41
      tags:
        - 49
      liked: false
      categories:
        - 44
      block_tags:
        - 4
      user_id: 84
      collab: false
      ignore_blocked_users: false
      sort: best_match
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'games/{game_id}/users/{user}'
    metadata:
      groupName: Games
      groupDescription: |-

        API routes for interacting with game sections.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a game user'
      description: 'Returns the user as they are supposed to be when inside of a game. Handles roles and colors.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      game_id:
        name: game_id
        description: 'The ID of the game.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user:
        name: user
        description: 'The user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      game_id: 2
      user: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'games/{game_id}/users/{user_id}/data'
    metadata:
      groupName: Games
      groupDescription: |-

        API routes for interacting with game sections.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get game user data'
      description: 'Returns game data for a user. Currently used for roles.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      game_id:
        name: game_id
        description: 'The ID of the game.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      game_id: 2
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'games/{game_id}/data'
    metadata:
      groupName: Games
      groupDescription: |-

        API routes for interacting with game sections.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get game data'
      description: 'Returns basic game data like announcements. For moderators, it returns report and waiting mods count.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      game_id:
        name: game_id
        description: 'The ID of the game.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      game_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'games/{game_id}/users/{user_id}/roles'
    metadata:
      groupName: Games
      groupDescription: |-

        API routes for interacting with game sections.
      subgroup: ''
      subgroupDescription: ''
      title: 'Set user roles'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      game_id:
        name: game_id
        description: 'The ID of the game.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      game_id: 2
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role_ids:
        name: role_ids
        description: 'Must be at least 1.'
        required: false
        example:
          - 57
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      role_ids:
        - 57
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
