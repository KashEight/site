## Autogenerated by Scribe. DO NOT MODIFY.

name: Threads
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'forums/{forum_id}/threads'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List threads'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      forum_id:
        name: forum_id
        description: 'The ID of the forum.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      forum_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Must not be greater than 150 characters.'
        required: false
        example: a
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_name:
        name: category_name
        description: 'Must not be greater than 100 characters.'
        required: false
        example: duwqikikzkkjoj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: 'Must be at least 1.'
        required: false
        example: 79
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: 'Must be at least 1.'
        required: false
        example:
          - 71
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      no_pins:
        name: no_pins
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      closed:
        name: closed
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      forum_id:
        name: forum_id
        description: 'Must be at least 1.'
        required: false
        example: 41
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      query: a
      limit: 5
      category_name: duwqikikzkkjoj
      category_id: 79
      tags:
        - 71
      no_pins: false
      closed: true
      forum_id: 41
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'forums/{forum_id}/threads'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a thread'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      forum_id:
        name: forum_id
        description: 'The ID of the forum.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      forum_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 150 characters.'
        required: false
        example: sobgwyinbxwjkp
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      content:
        name: content
        description: 'Must be at least 2 characters. Must not be greater than 30000 characters.'
        required: true
        example: ysuxvlkwwk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      announce_until:
        name: announce_until
        description: 'Must be a valid date.'
        required: false
        example: '2024-10-21T05:12:32'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      announce:
        name: announce
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tag_ids:
        name: tag_ids
        description: 'Must be at least 1.'
        required: false
        example:
          - 7
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: 'Must be at least 1.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: sobgwyinbxwjkp
      content: ysuxvlkwwk
      announce_until: '2024-10-21T05:12:32'
      announce: false
      tag_ids:
        - 7
      category_id: 10
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'threads/{id}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a thread'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the thread.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'threads/{id}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a thread'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the thread.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 150 characters.'
        required: false
        example: izzcccsjpbonkecighk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      content:
        name: content
        description: 'Must be at least 2 characters. Must not be greater than 30000 characters.'
        required: false
        example: qzmovxinttzparzntqcmn
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: 'Must be at least 1.'
        required: false
        example: 47
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      forum_id:
        name: forum_id
        description: 'Must be at least 1.'
        required: false
        example: 88
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      answer_comment_id:
        name: answer_comment_id
        description: 'Must be at least 1.'
        required: false
        example: 79
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      announce_until:
        name: announce_until
        description: 'Must be a valid date.'
        required: false
        example: '2024-10-21T05:12:32'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      announce:
        name: announce
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tag_ids:
        name: tag_ids
        description: 'Must be at least 1.'
        required: false
        example:
          - 45
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      pinned:
        name: pinned
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      locked:
        name: locked
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      closed:
        name: closed
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: izzcccsjpbonkecighk
      content: qzmovxinttzparzntqcmn
      category_id: 47
      forum_id: 88
      answer_comment_id: 79
      announce_until: '2024-10-21T05:12:32'
      announce: false
      tag_ids:
        - 45
      pinned: true
      locked: false
      closed: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'threads/{id}'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a thread'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the thread.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'users/{user_id}/threads'
    metadata:
      groupName: Threads
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user threads'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Must not be greater than 150 characters.'
        required: false
        example: dkpit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 50.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_name:
        name: category_name
        description: 'Must not be greater than 100 characters.'
        required: false
        example: ieyfnkxujotrhwmsplquonm
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: 'Must be at least 1.'
        required: false
        example: 61
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: 'Must be at least 1.'
        required: false
        example:
          - 89
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        custom: []
      no_pins:
        name: no_pins
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      closed:
        name: closed
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      forum_id:
        name: forum_id
        description: 'Must be at least 1.'
        required: false
        example: 58
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      query: dkpit
      limit: 10
      category_name: ieyfnkxujotrhwmsplquonm
      category_id: 61
      tags:
        - 89
      no_pins: true
      closed: true
      forum_id: 58
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
